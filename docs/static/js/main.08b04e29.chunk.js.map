{"version":3,"sources":["components/header/header.js","components/task-input/task-input.js","components/timer/timer.js","components/counter/counter.js","components/app/app.js","serviceWorker.js","index.js"],"names":["Title","styled","h1","_templateObject","props","primary","Wrapper","header","_templateObject2","Header","react_default","a","createElement","Component","div","task_input_templateObject","Input","input","task_input_templateObject2","fadeInMove","keyframes","_templateObject3","colorChange","_templateObject4","Button","button","_templateObject5","ButtonStart","_templateObject6","ButtonReset","_templateObject7","TaskInput","_this$props","this","taskName","isStarted","onTypeTask","onStartTask","onReset","task_input_Wrapper","disabled","type","placeholder","value","onChange","onClick","timer_templateObject","timer_templateObject2","StyledTimer","span","timer_templateObject3","done","Status","timer_templateObject4","ButtonNext","timer_templateObject5","Timer","statusText","timerCount","nextStatusText","phase","isCounting","onDoneCounting","onContinue","timer_Wrapper","Countdown_default","date","Date","now","renderer","_ref","minutes","seconds","completed","onComplete","counter_templateObject","counter_templateObject2","StyledCounter","counter_templateObject3","CounterItem","counter_templateObject4","last","current","Counter","counter_Wrapper","app_templateObject","StyledFooter","footer","app_templateObject2","StyledFooterLink","app_templateObject3","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","e","setState","target","_this2","console","log","_this3","_this4","app_Wrapper","className","task_input","Fragment","counter","timer","href","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.08b04e29.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 900;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  color: ${props => (props.primary ? \"#FF4500\" : \"#999289\")};\r\n  margin-bottom: ${props => (props.primary ? \"1rem\" : \"0\")};\r\n`;\r\n\r\nconst Wrapper = styled.header`\r\n  ${\"\" /* padding: 4em;\r\n  background: papayawhip; */};\r\n`;\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Pocket</Title>\r\n        <Title primary>Pomodoro</Title>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  ${\"\" /* border: 1px solid green; */} width: 100%;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  margin-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 2px solid #999289;\r\n  text-align: center;\r\n  color: #ff4500;\r\n  font-family: inherit;\r\n  font-size: 1.5rem;\r\n  outline: none;\r\n  background-color: transparent;\r\n\r\n  ::placeholder {\r\n    color: #999289;\r\n  }\r\n`;\r\n\r\nconst fadeInMove = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  } 100% {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n\r\nconst colorChange = keyframes`\r\n  0% {\r\n    background-color: #ff4500;\r\n  } 100% {\r\n    background-color: #999289;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: inherit;\r\n  font-size: 1.5rem;\r\n  color: #ffffff;\r\n  border: none;\r\n  border-radius: 100rem;\r\n  cursor: pointer;\r\n\r\n  animation-name: ${fadeInMove};\r\n  animation-duration: 0.2s;\r\n  animation-timing-function: ease-out;\r\n`;\r\n\r\nconst ButtonStart = styled(Button)`\r\n  background-color: #ff4500;\r\n  :hover {\r\n    background-color: #e03d00;\r\n  }\r\n`;\r\n\r\nconst ButtonReset = styled(Button)`\r\n  background-color: #999289;\r\n  :hover {\r\n    background-color: #827a71;\r\n  }\r\n\r\n  animation-name: ${colorChange};\r\n  animation-duration: 0.2s;\r\n  animation-timing-function: ease-out;\r\n`;\r\n\r\nclass TaskInput extends Component {\r\n  render() {\r\n    const {\r\n      taskName,\r\n      isStarted,\r\n      onTypeTask,\r\n      onStartTask,\r\n      onReset\r\n    } = this.props;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Input\r\n          disabled={isStarted}\r\n          type=\"text\"\r\n          placeholder=\"Enter your task\"\r\n          value={taskName}\r\n          onChange={onTypeTask}\r\n        />\r\n\r\n        {taskName && !isStarted ? (\r\n          <ButtonStart onClick={onStartTask}>Start</ButtonStart>\r\n        ) : null}\r\n\r\n        {isStarted ? <ButtonReset onClick={onReset}>Reset</ButtonReset> : null}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskInput;\r\n","import React, { Component } from \"react\";\r\nimport Countdown from \"react-countdown-now\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\n// style\r\nconst fadeInMove = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  } 100% {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  ${\"\" /* border: 1px solid cyan; */} width: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  animation-name: ${fadeInMove};\r\n  animation-duration: 0.2s;\r\n  animation-timing-function: ease-out;\r\n`;\r\n\r\nconst StyledTimer = styled.span`\r\n  font-family: \"Source Code Pro\", monospace;\r\n  font-size: 4rem;\r\n  font-weight: 700;\r\n  color: ${props => (props.done ? \"#999289\" : \"#ff4500\")};\r\n  letter-spacing: 2px;\r\n`;\r\n\r\nconst Status = styled.span`\r\n  margin-bottom: 1rem;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  text-transform: uppercase;\r\n  color: #999289;\r\n`;\r\n\r\nconst ButtonNext = styled.span`\r\n  width: 100%;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: inherit;\r\n  font-size: 1.5rem;\r\n  color: #ffffff;\r\n  border: none;\r\n  border-radius: 100rem;\r\n  cursor: pointer;\r\n\r\n  animation-name: ${fadeInMove};\r\n  animation-duration: 0.2s;\r\n  animation-timing-function: ease-out;\r\n\r\n  background-color: #ff4500;\r\n  :hover {\r\n    background-color: #e03d00;\r\n  }\r\n`;\r\n\r\nclass Timer extends Component {\r\n  render() {\r\n    const { phase, isCounting, onDoneCounting, onContinue } = this.props;\r\n\r\n    let statusText;\r\n    let timerCount;\r\n    let nextStatusText;\r\n\r\n    switch (phase) {\r\n      case 0:\r\n      case 2:\r\n      case 4:\r\n        statusText = \"Work\";\r\n        nextStatusText = \"Take a short break\";\r\n        timerCount = 1500000; // 1500000\r\n        break;\r\n\r\n      case 6:\r\n        statusText = \"Work\";\r\n        nextStatusText = \"Take a long break\";\r\n        timerCount = 1500000; // 1500000\r\n        break;\r\n\r\n      case 1:\r\n      case 3:\r\n      case 5:\r\n        statusText = \"Short Break\";\r\n        nextStatusText = \"Back to work\";\r\n        timerCount = 300000; // 300000\r\n        break;\r\n\r\n      case 7:\r\n        statusText = \"Long Break\";\r\n        nextStatusText = \"Repeat!\";\r\n        timerCount = 900000; // 900000\r\n        break;\r\n\r\n      default:\r\n        statusText = \"Unknown\";\r\n        timerCount = 900000;\r\n    }\r\n\r\n    const renderer = ({ minutes, seconds, completed }) => {\r\n      return (\r\n        <StyledTimer>\r\n          {minutes}:{seconds}\r\n        </StyledTimer>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Wrapper>\r\n        {isCounting ? (\r\n          <Countdown\r\n            date={Date.now() + timerCount}\r\n            renderer={renderer}\r\n            onComplete={onDoneCounting}\r\n          />\r\n        ) : (\r\n          <StyledTimer done>00:00</StyledTimer>\r\n        )}\r\n\r\n        <Status>{statusText}</Status>\r\n\r\n        {isCounting ? null : (\r\n          <ButtonNext onClick={onContinue}>{nextStatusText}</ButtonNext>\r\n        )}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\n// style\r\nconst fadeInMove = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  } 100% {\r\n    opacity: 1;\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n\r\n  animation-name: ${fadeInMove};\r\n  animation-duration: 0.2s;\r\n  animation-timing-function: linear;\r\n  ${\"\" /* margin-bottom: 1rem; */};\r\n`;\r\n\r\nconst StyledCounter = styled.span`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst CounterItem = styled.span`\r\n  margin-right: ${props => (props.last ? \"0\" : \"1rem\")};\r\n  color: ${props => (props.current ? \"#FF4500\" : \"#999289\")};\r\n`;\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    const { phase } = this.props;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <StyledCounter>\r\n          <CounterItem current={phase === 0 ? true : false}>1</CounterItem>\r\n          <CounterItem current={phase === 1 ? true : false}>•</CounterItem>\r\n          <CounterItem current={phase === 2 ? true : false}>2</CounterItem>\r\n          <CounterItem current={phase === 3 ? true : false}>•</CounterItem>\r\n          <CounterItem current={phase === 4 ? true : false}>3</CounterItem>\r\n          <CounterItem current={phase === 5 ? true : false}>•</CounterItem>\r\n          <CounterItem current={phase === 6 ? true : false}>4</CounterItem>\r\n          <CounterItem last current={phase === 7 ? true : false}>\r\n            •\r\n          </CounterItem>\r\n        </StyledCounter>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Header from \"../header/header\";\nimport TaskInput from \"../task-input/task-input\";\nimport Timer from \"../timer/timer\";\nimport Counter from \"../counter/counter\";\n\n// styled\nconst Wrapper = styled.div`\n  width: 20rem;\n  height: 450px;\n  padding: 2rem;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-between;\n  border: 2px solid white;\n  border-radius: 1rem;\n  margin-top: 5vw;\n\n  @media (max-width: 500px) {\n    width: fit-content;\n    margin-top: 2rem;\n    border: none;\n  }\n`;\n\nconst StyledFooter = styled.footer`\n  margin-top: 2rem;\n  text-align: center;\n  line-height: 1.5;\n`;\nconst StyledFooterLink = styled.a`\n  text-decoration: none;\n  color: #999289;\n  text-align: center;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: ##999289;\n  }\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      taskName: \"\",\n      isStarted: false,\n      isCounting: false,\n      phase: 0\n    };\n\n    this.onTypeTask = this.onTypeTask.bind(this);\n    this.onStartTask = this.onStartTask.bind(this);\n    this.onDoneCounting = this.onDoneCounting.bind(this);\n    this.onContinue = this.onContinue.bind(this);\n    this.onReset = this.onReset.bind(this);\n  }\n\n  onTypeTask(e) {\n    this.setState({ taskName: e.target.value });\n  }\n\n  onStartTask(e) {\n    this.setState({ isStarted: true, isCounting: true }, () => {\n      console.log(this.state.isStarted, this.state.taskName);\n    });\n  }\n\n  onDoneCounting() {\n    this.setState({ isCounting: false }, () => {\n      console.log(this.state);\n    });\n  }\n\n  onContinue() {\n    if (this.state.phase !== 7) {\n      this.setState({ isCounting: true, phase: this.state.phase + 1 }, () => {\n        console.log(this.state);\n      });\n    } else {\n      this.setState({ isCounting: true, phase: 0 }, () => {\n        console.log(this.state);\n      });\n    }\n  }\n\n  onReset() {\n    this.setState({\n      taskName: \"\",\n      isStarted: false,\n      phase: 0,\n      isCounting: false\n    });\n  }\n\n  render() {\n    return (\n      <Wrapper className=\"app\">\n        <Header />\n\n        <TaskInput\n          taskName={this.state.taskName}\n          isStarted={this.state.isStarted}\n          onTypeTask={this.onTypeTask}\n          onStartTask={this.onStartTask}\n          onReset={this.onReset}\n        />\n\n        {this.state.isStarted ? (\n          <React.Fragment>\n            <Counter phase={this.state.phase} />\n\n            <Timer\n              phase={this.state.phase}\n              isCounting={this.state.isCounting}\n              onDoneCounting={this.onDoneCounting}\n              onContinue={this.onContinue}\n            />\n          </React.Fragment>\n        ) : null}\n\n        <StyledFooter>\n          <StyledFooterLink\n            href=\"https://github.com/LJEsp/project-pocket-pomodoro\"\n            target=\"_blank\"\n          >\n            Made with &#10084; &mdash;&nbsp;LJEsp\n          </StyledFooterLink>\n        </StyledFooter>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}